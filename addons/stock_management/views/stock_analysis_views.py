# -*- coding: utf-8 -*-
"""
Ocean ERP - Stock Analysis Views
================================

Views for stock analysis management.
"""

from core_framework.ui import View, TreeView, FormView, SearchView, KanbanView
from core_framework.actions import ActWindow


class StockAnalysisTreeView(TreeView):
    """Stock Analysis Tree View"""
    
    _name = 'stock.analysis.tree'
    _model = 'stock.analysis'
    _title = 'Stock Analysis'
    
    def get_columns(self):
        """Get tree view columns"""
        return [
            {'name': 'name', 'label': 'Analysis Name', 'width': 200},
            {'name': 'analysis_type', 'label': 'Analysis Type', 'width': 150},
            {'name': 'date_from', 'label': 'From Date', 'width': 100},
            {'name': 'date_to', 'label': 'To Date', 'width': 100},
            {'name': 'state', 'label': 'Status', 'width': 100},
            {'name': 'location_id', 'label': 'Location', 'width': 120},
            {'name': 'warehouse_id', 'label': 'Warehouse', 'width': 120},
            {'name': 'total_products', 'label': 'Total Products', 'width': 120},
            {'name': 'total_value', 'label': 'Total Value', 'width': 120},
            {'name': 'total_quantity', 'label': 'Total Quantity', 'width': 120},
            {'name': 'generated_date', 'label': 'Generated Date', 'width': 120},
            {'name': 'generated_by', 'label': 'Generated By', 'width': 120},
            {'name': 'age_group', 'label': 'Age Group', 'width': 100},
            {'name': 'size', 'label': 'Size', 'width': 80},
            {'name': 'season', 'label': 'Season', 'width': 100},
            {'name': 'brand', 'label': 'Brand', 'width': 100},
            {'name': 'color', 'label': 'Color', 'width': 100},
        ]
    
    def get_decorations(self):
        """Get tree view decorations"""
        return {
            'draft': {'color': 'gray'},
            'generated': {'color': 'green'},
            'cancelled': {'color': 'red'},
        }


class StockAnalysisFormView(FormView):
    """Stock Analysis Form View"""
    
    _name = 'stock.analysis.form'
    _model = 'stock.analysis'
    _title = 'Stock Analysis'
    
    def get_fields(self):
        """Get form view fields"""
        return [
            {
                'name': 'name',
                'label': 'Analysis Name',
                'type': 'char',
                'required': True,
            },
            {
                'name': 'analysis_type',
                'label': 'Analysis Type',
                'type': 'selection',
                'required': True,
            },
            {
                'name': 'date_from',
                'label': 'From Date',
                'type': 'datetime',
                'required': True,
            },
            {
                'name': 'date_to',
                'label': 'To Date',
                'type': 'datetime',
                'required': True,
            },
            {
                'name': 'state',
                'label': 'Status',
                'type': 'selection',
                'readonly': True,
            },
            {
                'name': 'location_id',
                'label': 'Location',
                'type': 'many2one',
            },
            {
                'name': 'warehouse_id',
                'label': 'Warehouse',
                'type': 'many2one',
            },
            {
                'name': 'include_zero_stock',
                'label': 'Include Zero Stock',
                'type': 'boolean',
            },
            {
                'name': 'include_inactive_products',
                'label': 'Include Inactive Products',
                'type': 'boolean',
            },
            {
                'name': 'total_products',
                'label': 'Total Products',
                'type': 'integer',
                'readonly': True,
            },
            {
                'name': 'total_value',
                'label': 'Total Value',
                'type': 'float',
                'readonly': True,
            },
            {
                'name': 'total_quantity',
                'label': 'Total Quantity',
                'type': 'float',
                'readonly': True,
            },
            {
                'name': 'generated_date',
                'label': 'Generated Date',
                'type': 'datetime',
                'readonly': True,
            },
            {
                'name': 'generated_by',
                'label': 'Generated By',
                'type': 'many2one',
                'readonly': True,
            },
            {
                'name': 'age_group',
                'label': 'Age Group',
                'type': 'selection',
            },
            {
                'name': 'size',
                'label': 'Size',
                'type': 'selection',
            },
            {
                'name': 'season',
                'label': 'Season',
                'type': 'selection',
            },
            {
                'name': 'brand',
                'label': 'Brand',
                'type': 'char',
            },
            {
                'name': 'color',
                'label': 'Color',
                'type': 'char',
            },
            {
                'name': 'company_id',
                'label': 'Company',
                'type': 'many2one',
            },
        ]
    
    def get_buttons(self):
        """Get form view buttons"""
        return [
            {
                'name': 'action_generate',
                'label': 'Generate Analysis',
                'type': 'object',
                'class': 'btn-primary',
                'attrs': {'invisible': [('state', '!=', 'draft')]},
            },
            {
                'name': 'action_cancel',
                'label': 'Cancel',
                'type': 'object',
                'class': 'btn-danger',
                'attrs': {'invisible': [('state', '=', 'generated')]},
            },
            {
                'name': 'action_view_lines',
                'label': 'View Analysis Lines',
                'type': 'object',
                'class': 'btn-info',
                'attrs': {'invisible': [('state', '!=', 'generated')]},
            },
        ]


class StockAnalysisSearchView(SearchView):
    """Stock Analysis Search View"""
    
    _name = 'stock.analysis.search'
    _model = 'stock.analysis'
    _title = 'Search Stock Analysis'
    
    def get_fields(self):
        """Get search view fields"""
        return [
            {'name': 'name', 'label': 'Analysis Name'},
            {'name': 'analysis_type', 'label': 'Analysis Type'},
            {'name': 'state', 'label': 'Status'},
            {'name': 'location_id', 'label': 'Location'},
            {'name': 'warehouse_id', 'label': 'Warehouse'},
            {'name': 'generated_by', 'label': 'Generated By'},
            {'name': 'age_group', 'label': 'Age Group'},
            {'name': 'size', 'label': 'Size'},
            {'name': 'season', 'label': 'Season'},
            {'name': 'brand', 'label': 'Brand'},
            {'name': 'color', 'label': 'Color'},
        ]
    
    def get_filters(self):
        """Get search view filters"""
        return [
            {'name': 'draft', 'label': 'Draft', 'domain': [('state', '=', 'draft')]},
            {'name': 'generated', 'label': 'Generated', 'domain': [('state', '=', 'generated')]},
            {'name': 'cancelled', 'label': 'Cancelled', 'domain': [('state', '=', 'cancelled')]},
            {'name': 'turnover', 'label': 'Stock Turnover', 'domain': [('analysis_type', '=', 'turnover')]},
            {'name': 'aging', 'label': 'Stock Aging', 'domain': [('analysis_type', '=', 'aging')]},
            {'name': 'seasonal', 'label': 'Seasonal Analysis', 'domain': [('analysis_type', '=', 'seasonal')]},
            {'name': 'size_wise', 'label': 'Size-wise Analysis', 'domain': [('analysis_type', '=', 'size_wise')]},
            {'name': 'brand_wise', 'label': 'Brand-wise Analysis', 'domain': [('analysis_type', '=', 'brand_wise')]},
            {'name': 'color_wise', 'label': 'Color-wise Analysis', 'domain': [('analysis_type', '=', 'color_wise')]},
            {'name': 'age_group', 'label': 'Age Group Analysis', 'domain': [('analysis_type', '=', 'age_group')]},
            {'name': 'abc', 'label': 'ABC Analysis', 'domain': [('analysis_type', '=', 'abc')]},
            {'name': 'xyz', 'label': 'XYZ Analysis', 'domain': [('analysis_type', '=', 'xyz')]},
            {'name': 'profitability', 'label': 'Profitability Analysis', 'domain': [('analysis_type', '=', 'profitability')]},
            {'name': 'slow_moving', 'label': 'Slow Moving Items', 'domain': [('analysis_type', '=', 'slow_moving')]},
            {'name': 'fast_moving', 'label': 'Fast Moving Items', 'domain': [('analysis_type', '=', 'fast_moving')]},
            {'name': 'dead_stock', 'label': 'Dead Stock Analysis', 'domain': [('analysis_type', '=', 'dead_stock')]},
            {'name': 'age_0_2', 'label': 'Baby (0-2 years)', 'domain': [('age_group', '=', '0-2')]},
            {'name': 'age_2_4', 'label': 'Toddler (2-4 years)', 'domain': [('age_group', '=', '2-4')]},
            {'name': 'age_4_6', 'label': 'Pre-school (4-6 years)', 'domain': [('age_group', '=', '4-6')]},
            {'name': 'summer', 'label': 'Summer', 'domain': [('season', '=', 'summer')]},
            {'name': 'winter', 'label': 'Winter', 'domain': [('season', '=', 'winter')]},
            {'name': 'monsoon', 'label': 'Monsoon', 'domain': [('season', '=', 'monsoon')]},
        ]
    
    def get_groups(self):
        """Get search view groups"""
        return [
            {'name': 'analysis_type', 'label': 'Analysis Type'},
            {'name': 'state', 'label': 'Status'},
            {'name': 'location_id', 'label': 'Location'},
            {'name': 'warehouse_id', 'label': 'Warehouse'},
            {'name': 'generated_by', 'label': 'Generated By'},
            {'name': 'age_group', 'label': 'Age Group'},
            {'name': 'size', 'label': 'Size'},
            {'name': 'season', 'label': 'Season'},
            {'name': 'brand', 'label': 'Brand'},
            {'name': 'color', 'label': 'Color'},
            {'name': 'company_id', 'label': 'Company'},
        ]


class StockAnalysisKanbanView(KanbanView):
    """Stock Analysis Kanban View"""
    
    _name = 'stock.analysis.kanban'
    _model = 'stock.analysis'
    _title = 'Stock Analysis'
    
    def get_kanban_columns(self):
        """Get kanban view columns"""
        return [
            {'name': 'state', 'label': 'Status'},
            {'name': 'analysis_type', 'label': 'Analysis Type'},
        ]
    
    def get_kanban_fields(self):
        """Get kanban view fields"""
        return [
            'state',
            'analysis_type',
            'name',
            'date_from',
            'date_to',
            'location_id',
            'warehouse_id',
            'total_products',
            'total_value',
            'total_quantity',
            'generated_date',
            'generated_by',
            'age_group',
            'size',
            'season',
            'brand',
            'color',
        ]


class StockAnalysisActWindow(ActWindow):
    """Stock Analysis Action Window"""
    
    _name = 'action_stock_analysis'
    _model = 'stock.analysis'
    _view_mode = 'tree,form,kanban'
    _title = 'Stock Analysis'
    
    def get_context(self):
        """Get action window context"""
        return {}
    
    def get_domain(self):
        """Get action window domain"""
        return []
    
    def get_help(self):
        """Get action window help"""
        return {
            'title': 'Create your first stock analysis!',
            'message': 'Stock analysis helps you understand your inventory performance.',
        }


class StockAnalysisLineTreeView(TreeView):
    """Stock Analysis Line Tree View"""
    
    _name = 'stock.analysis.line.tree'
    _model = 'stock.analysis.line'
    _title = 'Analysis Lines'
    
    def get_columns(self):
        """Get tree view columns"""
        return [
            {'name': 'analysis_id', 'label': 'Analysis', 'width': 150},
            {'name': 'product_id', 'label': 'Product', 'width': 150},
            {'name': 'quantity', 'label': 'Quantity', 'width': 100},
            {'name': 'value', 'label': 'Value', 'width': 100},
            {'name': 'turnover_ratio', 'label': 'Turnover Ratio', 'width': 120},
            {'name': 'days_in_stock', 'label': 'Days in Stock', 'width': 120},
            {'name': 'abc_classification', 'label': 'ABC Class', 'width': 100},
            {'name': 'xyz_classification', 'label': 'XYZ Class', 'width': 100},
            {'name': 'sales_quantity', 'label': 'Sales Qty', 'width': 100},
            {'name': 'sales_value', 'label': 'Sales Value', 'width': 100},
            {'name': 'profit_margin', 'label': 'Profit Margin', 'width': 120},
            {'name': 'age_group', 'label': 'Age Group', 'width': 100},
            {'name': 'size', 'label': 'Size', 'width': 80},
            {'name': 'season', 'label': 'Season', 'width': 100},
            {'name': 'brand', 'label': 'Brand', 'width': 100},
            {'name': 'color', 'label': 'Color', 'width': 100},
        ]
    
    def get_decorations(self):
        """Get tree view decorations"""
        return {
            'a': {'color': 'green'},
            'b': {'color': 'orange'},
            'c': {'color': 'red'},
        }


class StockAnalysisLineFormView(FormView):
    """Stock Analysis Line Form View"""
    
    _name = 'stock.analysis.line.form'
    _model = 'stock.analysis.line'
    _title = 'Analysis Line'
    
    def get_fields(self):
        """Get form view fields"""
        return [
            {
                'name': 'analysis_id',
                'label': 'Analysis',
                'type': 'many2one',
                'required': True,
            },
            {
                'name': 'sequence',
                'label': 'Sequence',
                'type': 'integer',
            },
            {
                'name': 'product_id',
                'label': 'Product',
                'type': 'many2one',
                'required': True,
            },
            {
                'name': 'product_template_id',
                'label': 'Product Template',
                'type': 'many2one',
            },
            {
                'name': 'quantity',
                'label': 'Quantity',
                'type': 'float',
            },
            {
                'name': 'value',
                'label': 'Value',
                'type': 'float',
            },
            {
                'name': 'turnover_ratio',
                'label': 'Turnover Ratio',
                'type': 'float',
            },
            {
                'name': 'days_in_stock',
                'label': 'Days in Stock',
                'type': 'integer',
            },
            {
                'name': 'abc_classification',
                'label': 'ABC Classification',
                'type': 'selection',
            },
            {
                'name': 'xyz_classification',
                'label': 'XYZ Classification',
                'type': 'selection',
            },
            {
                'name': 'sales_quantity',
                'label': 'Sales Quantity',
                'type': 'float',
            },
            {
                'name': 'sales_value',
                'label': 'Sales Value',
                'type': 'float',
            },
            {
                'name': 'profit_margin',
                'label': 'Profit Margin',
                'type': 'float',
            },
            {
                'name': 'age_group',
                'label': 'Age Group',
                'type': 'selection',
            },
            {
                'name': 'size',
                'label': 'Size',
                'type': 'selection',
            },
            {
                'name': 'season',
                'label': 'Season',
                'type': 'selection',
            },
            {
                'name': 'brand',
                'label': 'Brand',
                'type': 'char',
            },
            {
                'name': 'color',
                'label': 'Color',
                'type': 'char',
            },
            {
                'name': 'company_id',
                'label': 'Company',
                'type': 'many2one',
            },
        ]


class StockAnalysisLineActWindow(ActWindow):
    """Stock Analysis Line Action Window"""
    
    _name = 'action_stock_analysis_line'
    _model = 'stock.analysis.line'
    _view_mode = 'tree,form'
    _title = 'Analysis Lines'
    
    def get_context(self):
        """Get action window context"""
        return {}
    
    def get_domain(self):
        """Get action window domain"""
        return []
    
    def get_help(self):
        """Get action window help"""
        return {
            'title': 'View analysis lines!',
            'message': 'Analysis lines show the details of each product analysis.',
        }